<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.picstory.mapper.PicstoryMapper">

	<select id="login" parameterType="com.picstory.model.User"
		resultType="com.picstory.model.User">
		SELECT * FROM TB_USER
		WHERE USER_ID = #{user_id} AND USER_PW
		= #{user_pw}
	</select>
	
		<select id="loginEncodePwSelect"
		parameterType="com.picstory.model.User"
		resultType="com.picstory.model.User">
		SELECT * FROM tb_user
		where user_id = #{user_id}
	</select>

	<!-- 결제완료 -->
	<select id="payment" parameterType="com.picstory.model.User"
		resultType="String">
		UPDATE tb_user
		SET user_premium= '20'
		WHERE user_num=
		#{user_num}
	</select>

	<!-- 회원가입 -->
	<insert id="memberJoin" parameterType="com.picstory.model.User">
		insert into
		tb_user(user_id, user_pw, user_name, user_nick, user_mail)
		values(#{user_id}, #{user_pw}, #{user_name}, #{user_nick},
		#{user_mail})
	</insert>

	<select id="idDoubleCheck" parameterType="String"
		resultType="String">
		select user_id
		from tb_user
		where user_id = #{user_id}
	</select>

	<!-- 닉네임 중복체크 -->
	<select id="nickDoubleCheck" parameterType="String"
		resultType="String">
		select user_nick
		from tb_user
		where user_nick = #{user_nick}
	</select>

	<!-- 메일 중복체크 -->
	<select id="mailDoubleCheck" parameterType="String"
		resultType="String">
		select user_mail
		from tb_user
		where user_mail = #{user_mail}
	</select>

	<!-- 마이페이지 -->
	<select id="myinfo" parameterType="com.picstory.model.User"
		resultType="com.picstory.model.User">
		SELECT * FROM TB_USER
		WHERE user_num = #{user_num}
	</select>

	<!-- 정보수정 -->
	<update id="infoUpdate" parameterType="com.picstory.model.User">
		update tb_user
		set user_pw
		= #{user_pw}, user_name = #{user_name}, user_nick = #{user_nick},
		user_mail = #{user_mail}
		where user_id = #{user_id}
	</update>

	<!-- 이미지 업로드 -->
	<insert id="imageListUpload"
		parameterType="com.picstory.model.Photo">
		INSERT INTO tb_photo (user_num, s3_photo_name,
		user_photo_name, photo_url,photo_size, photo_favor)
		VALUES(#{user_num}, #{s3_photo_name},#{user_photo_name}, #{photo_url},
		#{photo_size}, '10')
	</insert>


	<!-- 이미지 다운로드 -->
	<select id="imageDownload"
		parameterType="com.picstory.model.Photo"
		resultType="com.picstory.model.Photo">
		SELECT* FROM
		tb_photo
		WHERE user_num =
		#{user_num}
	</select>

	<!-- 아이디 찾기 -->
	<select id="selectId" parameterType="com.picstory.model.User"
		resultType="com.picstory.model.User">
		SELECT user_id,user_name
		FROM tb_user
		WHERE USER_NICK =
		#{user_nick} AND USER_MAIL
		= #{user_mail}
	</select>

	<!-- 비번 찾기 -->
	<select id="selectPw" parameterType="com.picstory.model.User"
		resultType="com.picstory.model.User">
		SELECT user_pw,user_name
		FROM tb_user
		WHERE USER_ID =
		#{user_id} AND USER_MAIL
		= #{user_mail}
	</select>

	<!--이미지 즐겨찾기 설정o -> 20 -->
	<update id="favorTrue" parameterType="com.picstory.model.User">
		UPDATE tb_photo
		SET
		photo_favor = '20'
		WHERE s3_photo_name=#{s3_photo_name}
	</update>

	<!--이미지 즐겨찾기 설정 x -> 10 -->
	<update id="favorFalse" parameterType="com.picstory.model.User">
		UPDATE tb_photo
		SET
		photo_favor = '10'
		WHERE s3_photo_name=#{s3_photo_name}
	</update>

	<!-- 즐겨찾기페이지 이미지 리스트 -->
	<select id="favorPageImgList"
		parameterType="com.picstory.model.Photo"
		resultType="com.picstory.model.Photo">
		SELECT s3_photo_name, photo_url, user_photo_name,
		photo_favor FROM tb_photo
		WHERE user_num =
		#{user_num} and photo_favor =
		'20'

	</select>

	<!-- 사용자별 생성 폴더 삽입 -->
	<insert id="folderListInsert"
		parameterType="com.picstory.model.UserFolder">
		INSERT INTO tb_u_folder (user_num,
		folder_name)
		VALUES(#{user_num},#{folder_name})
	</insert>

	<!-- 사용자별 보유 폴더 조회 -->
	<select id="folderListSelect"
		parameterType="com.picstory.model.UserFolder"
		resultType="com.picstory.model.UserFolder">
		SELECT folder_num, folder_name
		From tb_u_folder
		WHERE
		user_num = #{user_num}
		ORDER BY folder_uploaded
	</select>

	<!-- 태그 추가 (한 이미지에 대한 태그 추가) -->
	<insert id="addTag" parameterType="com.picstory.model.PhotoTag">
		INSERT INTO tb_p_tag
		(photo_num, tag_name)
		VALUES
		(#{photo_num}, #{tag_name})
	</insert>

	<!-- 태그 추가 (사용자의 커스텀 태그를 추가) -->
	<insert id="createTag"
		parameterType="com.picstory.model.UserTag">
		INSERT INTO tb_user_tag (user_num, user_tag_name)
		VALUES
		(#{user_num}, #{user_tag_name})
	</insert>

	<!-- 프리미엄 여부 체크 -->
	<select id="preminumCheck"
		parameterType="com.picstory.model.Photo"
		resultType="com.picstory.model.User">
		SELECT user_premium
		FROM tb_user
		WHERE user_num =
		#{user_num}
	</select>

	<!-- 커스텀 태그 조회 -->
	<select id="getCustomTag"
		parameterType="com.picstory.model.Photo"
		resultType="com.picstory.model.UserTag">
		SELECT user_tag_name
		FROM tb_user_tag
		WHERE user_num =
		#{user_num}
	</select>

	<!-- 이미지 태깅 - url로 photo_num조회 -->
	<select id="getPhotoNum" resultType="com.picstory.model.Photo">
		SELECT photo_num FROM
		tb_photo
		WHERE photo_url =
		#{photo_url}
	</select>


	<!-- 사진 정보 전부 불러오기 -->
	<select id="getPhotoInfo"
		parameterType="com.picstory.model.Photo"
		resultType="com.picstory.model.Photo">
		SELECT * FROM tb_photo
		WHERE user_num =
		#{user_num}
	</select>


	<!-- 네이버 첫 로그인 -->
	<insert id="naverJoin" parameterType="com.picstory.model.User">
		insert into
		tb_user(user_naver_id)
		values(#{user_naver_id})
	</insert>

	<!-- 네이버 로그인 -->
	<select id="naverSelect" parameterType="com.picstory.model.User"
		resultType="Integer">
		select user_num from tb_user
		where user_naver_id =
		#{user_naver_id}
	</select>

	<!-- 마이페이지 사진 수 -->
	<select id="countPhoto" parameterType="com.picstory.model.User"
		resultType="Integer">
		select count(photo_num) from tb_photo
		where user_num =
		#{user_num}
	</select>

	<!-- 회원탈퇴 -->
	<delete id="deleteUser" parameterType="com.picstory.model.User">
		delete from tb_user
		where
		user_num = #{user_num}
	</delete>

	<!-- 폴더 이름 변경 -->
	<update id="updateFolderName"
		parameterType="com.picstory.model.UserFolder">
		UPDATE tb_u_folder
		SET FOLDER_NAME = #{folder_name}
		WHERE
		FOLDER_NUM = #{folder_num}
	</update>

	<!-- 폴더 삭제 -->
	<delete id="deleteFolder"
		parameterType="com.picstory.model.UserFolder">
		DELETE FROM tb_u_folder
		WHERE folder_name =
		#{folder_name} AND folder_num = #{folder_num}
	</delete>

	<!-- 유저 프리미엄 정보 -->
	<select id="selectUserPremium"
		parameterType="com.picstory.model.User"
		resultType="com.picstory.model.User">
		SELECT user_premium
		FROM tb_user
		WHERE user_num = #{user_num}
	</select>

	<!-- 선택한 태그 달린 사진넘버 가져오기 -->
	<select id="loadTaggingPhoto" resultType="java.lang.Integer">
		SELECT photo_num
		FROM tb_p_tag
		WHERE tag_name IN
		<foreach collection="list" item="tag" open="(" separator=","
			close=")">
			#{tag}
		</foreach>
	</select>


	<!-- 필터링한 사진 정보 가져오기 -->
	<select id="selectTaggedPhoto"
		parameterType="com.picstory.model.Photo"
		resultType="com.picstory.model.Photo">
		SELECT s3_photo_name, photo_url, user_photo_name
		FROM tb_photo
		WHERE user_num = #{user_num} AND photo_num IN
		<foreach collection="photo_num_list" item="photoNum" open="("
			separator="," close=")">
			#{photoNum}
		</foreach>
	</select>


	<!-- 태그 리스트 -->
	<select id="getTagList" parameterType="Integer"
		resultType="String">
		SELECT user_tag_name FROM tb_user_tag WHERE user_num =
		#{userNum}
	</select>

	<!-- 체크한 사진들 식별번호 가져오기 -->
	<select id="loadSelectedPhotoNum" parameterType="java.util.List" resultType="java.lang.Integer">
		SELECT photo_num
		FROM tb_photo
		WHERE  s3_photo_name IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
        #{item}
    	</foreach>
	</select>
	
	<!-- 체크한 사진 삭제하기 --> 
	<delete id="deleteChckedPhoto">
		DELETE FROM tb_photo
		WHERE photo_num In
		<foreach collection="list" item="item" open="(" separator="," close=")">
		#{item}
		</foreach>
	</delete>
	
	<!-- 폴더에 사진 담기 위해 폴더 식별번호 가져오기 -->
	<select id="addPhotoToFolder" parameterType="com.picstory.model.UserFolder" resultType="com.picstory.model.UserFolderPhoto">
		SELECT folder_num
		FROM tb_u_folder
		WHERE user_num = #{user_num} AND folder_name = #{folder_name}
	</select>
	
	 <!-- 폴더 식별번호와 선택된 사진 식별번호 이용해서 TB_U_F_PHOTO에 저장하기 -->
	<insert id="savePhotoInFolder" parameterType="com.picstory.model.UserFolderPhoto">
        INSERT INTO TB_U_F_PHOTO (photo_num, folder_num)
        VALUES (#{photo_num}, #{folder_num})
    </insert>
    
    <!-- 폴더 선택했을 때 해당 폴더 식별번호 가져오기 -->
	<select id="findFolderNum" parameterType="com.picstory.model.UserFolder" resultType="com.picstory.model.UserFolder">
		SELECT folder_num
		FROM tb_u_folder
		WHERE user_num = #{user_num} AND folder_name = #{folder_name}
	</select>
	 
	<!-- 가져온 폴더식별번호로 해당 폴더에 들어있는 사진 식별번호 가져오기 -->
	<select id="findPhotoNums" parameterType="com.picstory.model.UserFolder" resultType="com.picstory.model.Photo">
		SELECT photo_num
		FROM tb_u_f_photo
		WHERE folder_num = #{folder_num}
	</select>
	 
	<select id="findway" parameterType="com.picstory.model.Photo" resultType="com.picstory.model.Photo">
		SELECT *
		FROM tb_photo
		WHERE photo_num = #{photo_num}
	</select> 
	
</mapper>